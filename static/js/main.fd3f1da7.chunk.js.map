{"version":3,"sources":["serviceWorker.js","contexts.js","actions.js","components/TicTacToeSpace.jsx","components/TicTacToeColumn.jsx","components/TicTacToe.jsx","tttcomplay.js","tictactoe.js","reducers.js","components/App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","TicTacToeStore","React","createContext","MAKE_MOVE","RESET_GAME","TicTacToeSpace","memo","_ref","value","x","y","dispatch","useContext","classNames","click","useCallback","type","makeMove","display","String","fromCharCode","push","react_default","a","createElement","className","join","onClick","prevProps","nextProps","displayName","TicTacToeColumn","rows","map","components_TicTacToeSpace","key","concat","every","index","propTypes","PropTypes","array","isRequired","number","getColumnKey","reduce","acc","val","TicTacToe","columns","components_TicTacToeColumn","CORNERS","TTTComPlay","board","moves","depth","arguments","length","undefined","hasWon","game","Error","score","maxIndex","minIndex","possibleMoves","scores","forEach","move","futureGame","cloneWithMove","apply","possible","minimax","nextPlayer","indexOf","Math","max","min","floor","random","openSpaces","openingMove","WINNING_COMBOS","Object","classCallCheck","this","reset","_state","objectSpread","idealMove","_this$state","clonedBoard","column","slice","_this$state2","combosRemaining","winner","playerIsWinning","first","second","third","combo","player","ticTacToeAppInit","transformGameState","ticTacToeApp","_ref2","App","_useReducer","useReducer","_useReducer2","slicedToArray","resetClick","message","Fragment","Provider","components_TicTacToe","frameBorder","height","scrolling","src","title","width","ReactDOM","render","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fd3f1da7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nexport const TicTacToeStore = React.createContext();\n","// Action types\n\nexport const MAKE_MOVE = 'MAKE_MOVE';\nexport const RESET_GAME = 'RESET_GAME';\n\n// Action creators\n\nexport function makeMove(x, y) {\n  return { type: MAKE_MOVE, x, y };\n}\n\nexport function resetGame() {\n  return { type: RESET_GAME };\n}\n","import React, { useCallback, useContext } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { TicTacToeStore } from '../contexts';\nimport { makeMove } from '../actions';\n\nconst TicTacToeSpace = React.memo(\n  ({ value, x, y }) => {\n    const dispatch = useContext(TicTacToeStore);\n\n    const classNames = ['ttt-space'];\n\n    const click = useCallback(() => dispatch(makeMove(x, y)), [x, y]);\n\n    let display = String.fromCharCode(160); // &nbsp;\n\n    if (value === 1) {\n      display = 'X';\n    } else if (value === 2) {\n      display = 'O';\n    } else {\n      classNames.push('ttt-space-open');\n    }\n\n    return (\n      <div className={classNames.join(' ')} onClick={click}>\n        <div className=\"ttt-symbol\">{display}</div>\n      </div>\n    );\n  },\n  (prevProps, nextProps) => prevProps.value === nextProps.value\n);\n\nTicTacToeSpace.displayName = 'TicTacToeSpace';\n\nTicTacToeSpace.propTypes = {\n  value: PropTypes.number.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired\n};\n\nexport default TicTacToeSpace;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport TicTacToeSpace from './TicTacToeSpace';\n\nconst TicTacToeColumn = React.memo(\n  ({ rows, x }) => (\n    <div className=\"ttt-column\">\n      {rows.map((value, y) => (\n        <TicTacToeSpace key={`${x}_${y}`} value={value} x={x} y={y} />\n      ))}\n    </div>\n  ),\n  (prevProps, nextProps) =>\n    prevProps.rows.every((value, index) => nextProps.rows[index] === value) &&\n    prevProps.x === nextProps.x\n);\n\nTicTacToeColumn.displayName = 'TicTacToeColumn';\n\nTicTacToeColumn.propTypes = {\n  rows: PropTypes.array.isRequired,\n  x: PropTypes.number.isRequired\n};\n\nexport default TicTacToeColumn;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport TicTacToeColumn from './TicTacToeColumn.jsx';\n\nfunction getColumnKey(rows, index) {\n  return index + rows.reduce((acc, val) => acc + val, '');\n}\n\nconst TicTacToe = ({ columns }) => (\n  <div className=\"ttt-board\">\n    {columns.map((rows, index) => (\n      <TicTacToeColumn key={getColumnKey(rows, index)} rows={rows} x={index} />\n    ))}\n  </div>\n);\n\nTicTacToe.propTypes = {\n  columns: PropTypes.array.isRequired\n};\n\nexport default TicTacToe;\n","/**\n * Undefeatable TicTacToe\n *\n * Class for computer player logic\n *\n * Approach:\n * - Use minimax algorithm\n */\n\nconst CORNERS = [[0, 0], [2, 0], [0, 2], [2, 2]];\nconst MAX_DEPTH = 9;\n\nexport default class TTTComPlay {\n  static possibleMoves(board) {\n    const moves = [];\n\n    for (let x = 0; x < 3; x++) {\n      for (let y = 0; y < 3; y++) {\n        if (!board[x][y]) moves.push([x, y]); // Empty spaces will be `0` (falsey)\n      }\n    }\n\n    return moves;\n  }\n\n  static score(state, depth = 0) {\n    if (!state.hasWon) return 0;\n\n    return depth + (state.hasWon === 1 ? MAX_DEPTH : -MAX_DEPTH);\n  }\n\n  static minimax(game, depth = 0) {\n    if (depth >= MAX_DEPTH) {\n      throw new Error('Runaway minimax algorithm has reached impossible depth');\n    }\n\n    const state = game.state;\n\n    if (state.hasWon !== 0) {\n      return { score: TTTComPlay.score(state, depth) };\n    }\n\n    const possibleMoves = TTTComPlay.possibleMoves(state.board);\n\n    const moves = [];\n    const scores = [];\n\n    let maxIndex;\n    let minIndex;\n\n    depth += 1;\n\n    possibleMoves.forEach(function checkPossibleMove(move) {\n      const futureGame = game.cloneWithMove.apply(game, move);\n      const possible = TTTComPlay.minimax(futureGame, depth);\n\n      moves.push(move);\n      scores.push(possible.score);\n    });\n\n    if (state.nextPlayer === 1) {\n      maxIndex = scores.indexOf(Math.max.apply(Math, scores));\n    } else {\n      minIndex = scores.indexOf(Math.min.apply(Math, scores));\n    }\n\n    return {\n      move: moves[maxIndex !== undefined ? maxIndex : minIndex],\n      score: scores[maxIndex !== undefined ? maxIndex : minIndex]\n    };\n  }\n\n  static openingMove(game) {\n    // Play center or random corner\n    return game.state.board[1][1] === 0\n      ? [1, 1]\n      : CORNERS[Math.floor(Math.random() * 4)];\n  }\n\n  static idealMove(game) {\n    // Reduce minimax search space for first computer move\n    return game.state.openSpaces === 8\n      ? TTTComPlay.openingMove(game)\n      : TTTComPlay.minimax(game).move;\n  }\n}\n","/**\n * Undefeatable TicTacToe\n *\n * Assumptions:\n * - Player 1 is human, player 2 is computer\n * - Player 1 always goes first\n * - Player 2 must always win or draw the game\n */\n\nimport TTTComPlay from './tttcomplay';\n\nconst WINNING_COMBOS = [\n  [[0, 0], [0, 1], [0, 2]], // Left side\n  [[0, 0], [1, 0], [2, 0]], // Top side\n  [[2, 0], [2, 1], [2, 2]], // Right side\n  [[0, 2], [1, 2], [2, 2]], // Bottom side\n  [[1, 0], [1, 1], [1, 2]], // Middle vertical\n  [[0, 1], [1, 1], [2, 1]], // Middle horizontal\n  [[0, 0], [1, 1], [2, 2]], // First diagonal\n  [[0, 2], [1, 1], [2, 0]] // Second diagonal\n];\n\n// Class for public API of Tic Tac Toe game\nexport default class TicTacToe {\n  constructor(state) {\n    this.reset(state);\n  }\n\n  reset(state) {\n    this._state = {\n      board: [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n      hasWon: 0,\n      nextPlayer: 1,\n      openSpaces: 9,\n      ...state\n    };\n\n    if (state) this._state.hasWon = this.hasWon();\n\n    return this.state;\n  }\n\n  move(x, y) {\n    const state = this.state;\n\n    // Return early on invalid move\n    if (\n      x === undefined ||\n      y === undefined ||\n      state.hasWon !== 0 ||\n      state.board[x][y]\n    ) {\n      return state;\n    }\n\n    // Set chosen space to \"next player\" ID\n    state.board[x][y] = state.nextPlayer;\n\n    // Decrement counter of available open spaces\n    state.openSpaces -= 1;\n\n    // Winning move?\n    state.hasWon = this.hasWon();\n\n    // Next turn!\n    if (state.openSpaces) {\n      if (state.nextPlayer === 1) {\n        state.nextPlayer = 2;\n\n        return this.move.apply(this, TTTComPlay.idealMove(this));\n      } else {\n        state.nextPlayer = 1;\n      }\n    }\n\n    return this.state;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  cloneWithMove(x, y) {\n    const { board, nextPlayer, openSpaces } = this.state;\n\n    if (board[x][y]) return this;\n\n    // Moves as cloned state is useful for considering future moves + unit tests\n    const clonedBoard = board.map(column => column.slice());\n\n    clonedBoard[x][y] = nextPlayer;\n\n    return new TicTacToe({\n      board: clonedBoard,\n      nextPlayer: nextPlayer === 1 ? 2 : 1,\n      openSpaces: openSpaces - 1\n    });\n  }\n\n  hasWon() {\n    const { board, openSpaces } = this.state;\n\n    if (openSpaces > 4) return 0; // Game cannot be won until the 5th move\n\n    let combosRemaining = WINNING_COMBOS.length;\n\n    let winner = 0;\n\n    function playerIsWinning(first, second, third) {\n      const combo = [\n        board[first[0]][first[1]],\n        board[second[0]][second[1]],\n        board[third[0]][third[1]]\n      ];\n\n      const player = combo[0];\n\n      return player && combo.every(value => value === player) ? player : 0;\n    }\n\n    do {\n      winner = playerIsWinning.apply(this, WINNING_COMBOS[combosRemaining - 1]);\n\n      combosRemaining--;\n    } while (!winner && combosRemaining > 0);\n\n    // -1 for draw, 0 for no win, 1 or 2 for winning player\n    return !winner && openSpaces === 0 ? -1 : winner;\n  }\n}\n","import TicTacToe from './tictactoe';\n\nimport { MAKE_MOVE, RESET_GAME } from './actions';\n\nexport const game = new TicTacToe();\n\nexport const ticTacToeAppInit = {\n  board: [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n  hasWon: 0\n};\n\nfunction transformGameState({ board, hasWon }) {\n  return { board, hasWon };\n}\n\nexport function ticTacToeApp(state, { type, x, y }) {\n  switch (type) {\n    case MAKE_MOVE: {\n      if (state.hasWon !== 0 || state.board[x][y]) return state;\n\n      return transformGameState(game.move(x, y));\n    }\n\n    case RESET_GAME: {\n      return transformGameState(game.reset());\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import React, { useCallback, useReducer } from 'react';\n\nimport TicTacToe from './TicTacToe.jsx';\n\nimport { ticTacToeApp, ticTacToeAppInit } from '../reducers';\nimport { resetGame } from '../actions';\n\nimport { TicTacToeStore } from '../contexts';\n\nconst App = () => {\n  const [state, dispatch] = useReducer(ticTacToeApp, ticTacToeAppInit);\n\n  const resetClick = useCallback(() => dispatch(resetGame()));\n\n  let message = 'Game on! :)';\n\n  if (state.hasWon > 0) {\n    message = 'Player ' + state.hasWon + ' has won the game!';\n  } else if (state.hasWon === -1) {\n    message = 'The game has been drawn!';\n  }\n\n  return (\n    <>\n      <TicTacToeStore.Provider value={dispatch}>\n        <TicTacToe columns={state.board} />\n      </TicTacToeStore.Provider>\n      <div className=\"ttt-message\">{message}</div>\n      <div className=\"ttt-controls\">\n        <button className=\"btn btn-primary\" onClick={resetClick}>\n          Reset Game\n        </button>\n      </div>\n      <div className=\"ttt-github\">\n        <iframe\n          frameBorder=\"0\"\n          height=\"20px\"\n          scrolling=\"0\"\n          src=\"https://ghbtns.com/github-btn.html?user=awkaiser&repo=react-tictactoe&type=star\"\n          title=\"github-star\"\n          width=\"51px\"\n        />\n        <iframe\n          frameBorder=\"0\"\n          height=\"20px\"\n          scrolling=\"0\"\n          src=\"https://ghbtns.com/github-btn.html?user=awkaiser&type=follow\"\n          title=\"github-follow\"\n          width=\"123px\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('tictactoe'));\n\nserviceWorker.register();\n"],"sourceRoot":""}