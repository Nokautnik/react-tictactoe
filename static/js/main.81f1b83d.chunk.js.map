{"version":3,"sources":["serviceWorker.js","contexts.js","actions.js","components/TicTacToe/Space.jsx","components/TicTacToe/Column.jsx","components/TicTacToe/index.jsx","tttcomplay.js","tictactoe.js","reducers.js","components/App.jsx","index.js","components/TicTacToe/Space.module.css","components/App.module.css","components/TicTacToe/Column.module.css","components/TicTacToe/index.module.css"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","TicTacToeStore","React","createContext","makeMove","x","y","type","Space","memo","value","dispatch","useContext","classNames","styles","root","click","useCallback","display","String","fromCharCode","push","open","className","join","onClick","symbol","prevProps","nextProps","displayName","Column","rows","map","key","every","index","propTypes","PropTypes","array","isRequired","number","getColumnKey","reduce","acc","val","TicTacToe","columns","CORNERS","score","winner","depth","TTTComPlay","game","openSpaces","length","board","Math","floor","random","minimax","Error","moves","scores","forEach","move","cloneMove","apply","indexOf","nextPlayer","WINNING_COMBOS","hasWon","x1","y1","x2","y2","x3","y3","player","this","getWinner","combosLeft","validMove","reset","_state","column","slice","spaces","tttInitState","tttUpdate","tttReducer","App","useReducer","resetClick","useEffect","message","Provider","btn","github","frameBorder","height","scrolling","src","title","width","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.81f1b83d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nexport const TicTacToeStore = React.createContext();\n","// Action types\n\nexport const MAKE_MOVE = 'MAKE_MOVE';\nexport const RESET_GAME = 'RESET_GAME';\n\n// Action creators\n\nexport const makeMove = (x, y) => ({ type: MAKE_MOVE, x, y });\n\nexport const resetGame = () => ({ type: RESET_GAME });\n","import React, { useCallback, useContext } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { TicTacToeStore } from '../../contexts';\nimport { makeMove } from '../../actions';\n\nimport styles from './Space.module.css';\n\nconst Space = React.memo(\n  ({ value, x, y }) => {\n    const dispatch = useContext(TicTacToeStore);\n\n    const classNames = [styles.root];\n\n    const click = useCallback(() => dispatch(makeMove(x, y)), [dispatch, x, y]);\n\n    let display = String.fromCharCode(160); // &nbsp;\n\n    if (value === 1) {\n      display = 'X';\n    } else if (value === 2) {\n      display = 'O';\n    } else {\n      classNames.push(styles.open);\n    }\n\n    return (\n      <div className={classNames.join(' ')} onClick={click}>\n        <div className={styles.symbol}>{display}</div>\n      </div>\n    );\n  },\n  (prevProps, nextProps) => prevProps.value === nextProps.value\n);\n\nSpace.displayName = 'TicTacToeSpace';\n\nSpace.propTypes = {\n  value: PropTypes.number.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n};\n\nexport default Space;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Space from './Space';\n\nimport styles from './Column.module.css';\n\nconst Column = React.memo(\n  ({ rows, x }) => (\n    <div className={styles.root}>\n      {rows.map((value, y) => (\n        <Space key={`${x}_${y}`} value={value} x={x} y={y} />\n      ))}\n    </div>\n  ),\n  (prevProps, nextProps) =>\n    prevProps.rows.every((value, index) => nextProps.rows[index] === value) &&\n    prevProps.x === nextProps.x\n);\n\nColumn.displayName = 'TicTacToeColumn';\n\nColumn.propTypes = {\n  rows: PropTypes.array.isRequired,\n  x: PropTypes.number.isRequired,\n};\n\nexport default Column;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Column from './Column';\n\nimport styles from './index.module.css';\n\nfunction getColumnKey(rows, index) {\n  return index + rows.reduce((acc, val) => acc + val, '');\n}\n\nconst TicTacToe = ({ columns }) => (\n  <div className={styles.root}>\n    {columns.map((rows, index) => (\n      <Column key={getColumnKey(rows, index)} rows={rows} x={index} />\n    ))}\n  </div>\n);\n\nTicTacToe.displayName = 'TicTacToe';\n\nTicTacToe.propTypes = {\n  columns: PropTypes.array.isRequired,\n};\n\nexport default TicTacToe;\n","/**\n * Undefeatable TicTacToe\n *\n * Computer player logic\n *\n * Approach:\n * - Use minimax algorithm\n */\n\nconst CORNERS = [\n  [0, 0],\n  [2, 0],\n  [0, 2],\n  [2, 2],\n];\nconst MAX_DEPTH = 9;\n\nfunction score({ winner }, depth = 0) {\n  if (!winner) return 0;\n\n  return depth + (winner === 1 ? MAX_DEPTH : -MAX_DEPTH);\n}\n\nfunction minimax(game, depth = 0) {\n  if (depth >= MAX_DEPTH) throw new Error('Minimax reached impossible depth');\n\n  if (game.winner !== 0) return { score: score(game, depth) };\n\n  const moves = [];\n  const scores = [];\n\n  game.openSpaces.forEach((move) => {\n    const { score } = minimax(game.cloneMove.apply(game, move), depth + 1);\n\n    moves.push(move);\n    scores.push(score);\n  });\n\n  const index = scores.indexOf(\n    Math[game.nextPlayer === 1 ? 'max' : 'min'].apply(Math, scores)\n  );\n\n  return { move: moves[index], score: scores[index] };\n}\n\nfunction openingMove({ board }) {\n  // Play center or random corner\n  return board[1][1] === 0 ? [1, 1] : CORNERS[Math.floor(Math.random() * 4)];\n}\n\nexport default function TTTComPlay(game) {\n  // Reduce minimax search space with opening move\n  return game.openSpaces.length === 8 ? openingMove(game) : minimax(game).move;\n}\n","/**\n * Undefeatable TicTacToe\n *\n * Assumptions:\n * - Player 1 is human, player 2 is computer\n * - Player 1 always goes first\n * - Player 2 must always win or draw the game\n */\n\nconst WINNING_COMBOS = [\n  [\n    [0, 0],\n    [0, 1],\n    [0, 2],\n  ], // Left side\n  [\n    [0, 0],\n    [1, 0],\n    [2, 0],\n  ], // Top side\n  [\n    [2, 0],\n    [2, 1],\n    [2, 2],\n  ], // Right side\n  [\n    [0, 2],\n    [1, 2],\n    [2, 2],\n  ], // Bottom side\n  [\n    [1, 0],\n    [1, 1],\n    [1, 2],\n  ], // Middle vertical\n  [\n    [0, 1],\n    [1, 1],\n    [2, 1],\n  ], // Middle horizontal\n  [\n    [0, 0],\n    [1, 1],\n    [2, 2],\n  ], // First diagonal\n  [\n    [0, 2],\n    [1, 1],\n    [2, 0],\n  ], // Second diagonal\n];\n\nfunction hasWon([x1, y1], [x2, y2], [x3, y3]) {\n  const player = this[x1][y1];\n\n  return this[x2][y2] === player && this[x3][y3] === player ? player : 0;\n}\n\nfunction getWinner(game) {\n  const openSpaces = game.openSpaces;\n\n  if (openSpaces.length > 4) return 0; // Game cannot be won until the 5th move\n\n  let combosLeft = WINNING_COMBOS.length;\n\n  let winner = 0;\n\n  do {\n    winner = hasWon.apply(game.board, WINNING_COMBOS[combosLeft - 1]);\n\n    combosLeft--;\n  } while (!winner && combosLeft > 0);\n\n  // -1 for draw, 0 for no win, 1 or 2 for winning player\n  return !winner && openSpaces.length === 0 ? -1 : winner;\n}\n\nconst validMove = (x, y) => x >= 0 && x < 3 && y >= 0 && y < 3;\n\n// Class for public API of Tic Tac Toe game\nexport default class TicTacToe {\n  // #state; // TODO: Use private class field, waiting for TC39 stage 4\n\n  constructor(state) {\n    this.reset(state);\n  }\n\n  get board() {\n    return this._state.board;\n  }\n\n  get nextPlayer() {\n    return this._state.nextPlayer;\n  }\n\n  get openSpaces() {\n    const spaces = [];\n\n    for (let x = 0; x < 3; x++) {\n      for (let y = 0; y < 3; y++) {\n        if (!this.board[x][y]) spaces.push([x, y]); // Empty spaces will be `0` (falsey)\n      }\n    }\n\n    return spaces;\n  }\n\n  get winner() {\n    return this._state.winner;\n  }\n\n  reset(state) {\n    this._state = {\n      board: [\n        [0, 0, 0],\n        [0, 0, 0],\n        [0, 0, 0],\n      ],\n      nextPlayer: 1,\n      winner: 0,\n      ...state,\n    };\n\n    if (state) this._state.winner = getWinner(this);\n\n    return this._state;\n  }\n\n  move(x, y) {\n    const state = this._state;\n\n    // Return early on invalid move\n    if (!validMove(x, y) || this.winner !== 0 || this.board[x][y]) return state;\n\n    // Set chosen space to \"next player\" ID\n    state.board[x][y] = state.nextPlayer;\n\n    // Winning move?\n    state.winner = getWinner(this);\n\n    // Next turn!\n    state.nextPlayer = state.nextPlayer === 1 ? 2 : 1;\n\n    return state;\n  }\n\n  cloneMove(x, y) {\n    if (!validMove(x, y) || this.winner !== 0 || this.board[x][y]) return this;\n\n    const board = this.board.map((column) => column.slice());\n\n    board[x][y] = this.nextPlayer;\n\n    return new TicTacToe({ board, nextPlayer: this.nextPlayer === 1 ? 2 : 1 });\n  }\n}\n","import TicTacToe from './tictactoe';\n\nimport { MAKE_MOVE, RESET_GAME } from './actions';\n\nexport const game = new TicTacToe();\n\nexport const tttInitState = {\n  board: [\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0],\n  ],\n  nextPlayer: 1,\n  winner: 0,\n};\n\nconst tttUpdate = ({ board, nextPlayer, winner }) => ({\n  board,\n  nextPlayer,\n  winner,\n});\n\nexport function tttReducer(state, { type, x, y }) {\n  switch (type) {\n    case MAKE_MOVE:\n      return tttUpdate(game.move(x, y));\n\n    case RESET_GAME:\n      return tttUpdate(game.reset());\n\n    default:\n      return state;\n  }\n}\n","import React, { useCallback, useEffect, useReducer } from 'react';\n\nimport TicTacToe from './TicTacToe';\n\nimport TTTComPlay from '../tttcomplay';\n\nimport { game, tttInitState, tttReducer } from '../reducers';\nimport { makeMove, resetGame } from '../actions';\n\nimport { TicTacToeStore } from '../contexts';\n\nimport styles from './App.module.css';\n\nconst App = () => {\n  const [state, dispatch] = useReducer(tttReducer, tttInitState);\n\n  const resetClick = useCallback(() => dispatch(resetGame()), [dispatch]);\n\n  useEffect(() => {\n    if (state.winner === 0 && state.nextPlayer === 2) {\n      dispatch(makeMove.apply(game, TTTComPlay(game)));\n    }\n  });\n\n  let message = 'Game on! :)';\n\n  if (state.winner > 0) {\n    message = 'Player ' + state.winner + ' has won the game!';\n  } else if (state.winner === -1) {\n    message = 'The game has been drawn!';\n  }\n\n  return (\n    <>\n      <TicTacToeStore.Provider value={dispatch}>\n        <TicTacToe columns={state.board} />\n      </TicTacToeStore.Provider>\n      <div className={styles.message}>{message}</div>\n      <button className={styles.btn} onClick={resetClick}>\n        Reset Game\n      </button>\n      <div className={styles.github}>\n        <iframe\n          frameBorder=\"0\"\n          height=\"20px\"\n          scrolling=\"0\"\n          src=\"https://ghbtns.com/github-btn.html?user=awkaiser&repo=react-tictactoe&type=star\"\n          title=\"github-star\"\n          width=\"51px\"\n        />\n        <iframe\n          frameBorder=\"0\"\n          height=\"20px\"\n          scrolling=\"0\"\n          src=\"https://ghbtns.com/github-btn.html?user=awkaiser&type=follow\"\n          title=\"github-follow\"\n          width=\"123px\"\n        />\n      </div>\n    </>\n  );\n};\n\nApp.displayName = 'App';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\n\n// TODO: Switch to Concurrent Mode with future React release\nReactDOM.render(<App />, document.getElementById('tictactoe'));\n\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Space_root__3EmfC\",\"open\":\"Space_open__3PZqm\",\"symbol\":\"Space_symbol__2D9HM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"App_message__1bgJE\",\"btn\":\"App_btn__aBDMl\",\"github\":\"App_github__2ty2b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Column_root__3k8N7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicTacToe_root__ITQpp\"};"],"sourceRoot":""}