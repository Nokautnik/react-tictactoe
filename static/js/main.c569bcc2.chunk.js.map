{"version":3,"sources":["components/TicTacToe/Space.module.css","serviceWorker.js","contexts.js","actions.js","components/TicTacToe/Space.jsx","components/TicTacToe/Column.jsx","components/TicTacToe/index.jsx","tttcomplay.js","tictactoe.js","reducers.js","components/App.jsx","index.js","components/App.module.css","components/TicTacToe/Column.module.css","components/TicTacToe/index.module.css"],"names":["module","exports","root","open","symbol","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","TicTacToeStore","React","createContext","MAKE_MOVE","RESET_GAME","Space","memo","_ref","value","x","y","dispatch","useContext","classNames","styles","click","useCallback","type","makeMove","display","String","fromCharCode","push","react_default","a","createElement","className","join","onClick","prevProps","nextProps","displayName","Column","rows","map","TicTacToe_Space","key","concat","every","index","propTypes","PropTypes","array","isRequired","number","getColumnKey","reduce","acc","val","TicTacToe","columns","TicTacToe_Column","CORNERS","MAX_DEPTH","score","winner","depth","arguments","length","undefined","TTTComPlay","game","openSpaces","board","Math","floor","random","minimax","Error","moves","scores","forEach","move","cloneMove","apply","indexOf","nextPlayer","WINNING_COMBOS","hasWon","_ref2","_ref3","_ref4","Object","slicedToArray","x1","y1","_ref5","x2","y2","_ref6","x3","y3","player","this","getWinner","combosLeft","validMove","classCallCheck","reset","_state","objectSpread","column","slice","spaces","TTTInit","transformGameState","ticTacToeApp","App","_useReducer","useReducer","_useReducer2","resetClick","message","Fragment","Provider","components_TicTacToe","btn","github","frameBorder","height","scrolling","src","title","width","ReactDOM","render","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c569bcc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Space_root__3QfGW\",\"open\":\"Space_open__3of2Y\",\"symbol\":\"Space_symbol__32QTx\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nexport const TicTacToeStore = React.createContext();\n","// Action types\n\nexport const MAKE_MOVE = 'MAKE_MOVE';\nexport const RESET_GAME = 'RESET_GAME';\n\n// Action creators\n\nexport const makeMove = (x, y) => ({ type: MAKE_MOVE, x, y });\n\nexport const resetGame = () => ({ type: RESET_GAME });\n","import React, { useCallback, useContext } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { TicTacToeStore } from '../../contexts';\nimport { makeMove } from '../../actions';\n\nimport styles from './Space.module.css';\n\nconst Space = React.memo(\n  ({ value, x, y }) => {\n    const dispatch = useContext(TicTacToeStore);\n\n    const classNames = [styles.root];\n\n    const click = useCallback(() => dispatch(makeMove(x, y)), [x, y]);\n\n    let display = String.fromCharCode(160); // &nbsp;\n\n    if (value === 1) {\n      display = 'X';\n    } else if (value === 2) {\n      display = 'O';\n    } else {\n      classNames.push(styles.open);\n    }\n\n    return (\n      <div className={classNames.join(' ')} onClick={click}>\n        <div className={styles.symbol}>{display}</div>\n      </div>\n    );\n  },\n  (prevProps, nextProps) => prevProps.value === nextProps.value\n);\n\nSpace.displayName = 'TicTacToeSpace';\n\nSpace.propTypes = {\n  value: PropTypes.number.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired\n};\n\nexport default Space;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Space from './Space';\n\nimport styles from './Column.module.css';\n\nconst Column = React.memo(\n  ({ rows, x }) => (\n    <div className={styles.root}>\n      {rows.map((value, y) => (\n        <Space key={`${x}_${y}`} value={value} x={x} y={y} />\n      ))}\n    </div>\n  ),\n  (prevProps, nextProps) =>\n    prevProps.rows.every((value, index) => nextProps.rows[index] === value) &&\n    prevProps.x === nextProps.x\n);\n\nColumn.displayName = 'TicTacToeColumn';\n\nColumn.propTypes = {\n  rows: PropTypes.array.isRequired,\n  x: PropTypes.number.isRequired\n};\n\nexport default Column;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Column from './Column';\n\nimport styles from './index.module.css';\n\nfunction getColumnKey(rows, index) {\n  return index + rows.reduce((acc, val) => acc + val, '');\n}\n\nconst TicTacToe = ({ columns }) => (\n  <div className={styles.root}>\n    {columns.map((rows, index) => (\n      <Column key={getColumnKey(rows, index)} rows={rows} x={index} />\n    ))}\n  </div>\n);\n\nTicTacToe.displayName = 'TicTacToe';\n\nTicTacToe.propTypes = {\n  columns: PropTypes.array.isRequired\n};\n\nexport default TicTacToe;\n","/**\n * Undefeatable TicTacToe\n *\n * Computer player logic\n *\n * Approach:\n * - Use minimax algorithm\n */\n\nconst CORNERS = [[0, 0], [2, 0], [0, 2], [2, 2]];\nconst MAX_DEPTH = 9;\n\nfunction score({ winner }, depth = 0) {\n  if (!winner) return 0;\n\n  return depth + (winner === 1 ? MAX_DEPTH : -MAX_DEPTH);\n}\n\nfunction minimax(game, depth = 0) {\n  if (depth >= MAX_DEPTH) throw new Error('Minimax reached impossible depth');\n\n  if (game.winner !== 0) return { score: score(game, depth) };\n\n  const moves = [];\n  const scores = [];\n\n  game.openSpaces.forEach(move => {\n    const { score } = minimax(game.cloneMove.apply(game, move), depth + 1);\n\n    moves.push(move);\n    scores.push(score);\n  });\n\n  const index = scores.indexOf(\n    Math[game.nextPlayer === 1 ? 'max' : 'min'].apply(Math, scores)\n  );\n\n  return { move: moves[index], score: scores[index] };\n}\n\nfunction openingMove({ board }) {\n  // Play center or random corner\n  return board[1][1] === 0 ? [1, 1] : CORNERS[Math.floor(Math.random() * 4)];\n}\n\nexport default function TTTComPlay(game) {\n  // Reduce minimax search space with opening move\n  return game.openSpaces.length === 8 ? openingMove(game) : minimax(game).move;\n}\n","/**\n * Undefeatable TicTacToe\n *\n * Assumptions:\n * - Player 1 is human, player 2 is computer\n * - Player 1 always goes first\n * - Player 2 must always win or draw the game\n */\n\nimport TTTComPlay from './tttcomplay';\n\nconst WINNING_COMBOS = [\n  [[0, 0], [0, 1], [0, 2]], // Left side\n  [[0, 0], [1, 0], [2, 0]], // Top side\n  [[2, 0], [2, 1], [2, 2]], // Right side\n  [[0, 2], [1, 2], [2, 2]], // Bottom side\n  [[1, 0], [1, 1], [1, 2]], // Middle vertical\n  [[0, 1], [1, 1], [2, 1]], // Middle horizontal\n  [[0, 0], [1, 1], [2, 2]], // First diagonal\n  [[0, 2], [1, 1], [2, 0]] // Second diagonal\n];\n\nfunction hasWon([x1, y1], [x2, y2], [x3, y3]) {\n  const player = this[x1][y1];\n\n  return this[x2][y2] === player && this[x3][y3] === player ? player : 0;\n}\n\nfunction getWinner(game) {\n  const openSpaces = game.openSpaces;\n\n  if (openSpaces.length > 4) return 0; // Game cannot be won until the 5th move\n\n  let combosLeft = WINNING_COMBOS.length;\n\n  let winner = 0;\n\n  do {\n    winner = hasWon.apply(game.board, WINNING_COMBOS[combosLeft - 1]);\n\n    combosLeft--;\n  } while (!winner && combosLeft > 0);\n\n  // -1 for draw, 0 for no win, 1 or 2 for winning player\n  return !winner && openSpaces.length === 0 ? -1 : winner;\n}\n\nconst validMove = (x, y) => x >= 0 && x < 3 && y >= 0 && y < 3;\n\n// Class for public API of Tic Tac Toe game\nexport default class TicTacToe {\n  // #state; (TODO: Use private class field, waiting for TC39 stage 4)\n\n  constructor(state) {\n    this.reset(state);\n  }\n\n  get board() {\n    return this._state.board;\n  }\n\n  get nextPlayer() {\n    return this._state.nextPlayer;\n  }\n\n  get openSpaces() {\n    const spaces = [];\n\n    for (let x = 0; x < 3; x++) {\n      for (let y = 0; y < 3; y++) {\n        if (!this.board[x][y]) spaces.push([x, y]); // Empty spaces will be `0` (falsey)\n      }\n    }\n\n    return spaces;\n  }\n\n  get winner() {\n    return this._state.winner;\n  }\n\n  reset(state) {\n    this._state = {\n      board: [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n      nextPlayer: 1,\n      winner: 0,\n      ...state\n    };\n\n    if (state) this._state.winner = getWinner(this);\n\n    return this._state;\n  }\n\n  move(x, y) {\n    const state = this._state;\n\n    // Return early on invalid move\n    if (!validMove(x, y) || this.winner !== 0 || this.board[x][y]) return state;\n\n    // Set chosen space to \"next player\" ID\n    state.board[x][y] = state.nextPlayer;\n\n    // Winning move?\n    state.winner = getWinner(this);\n\n    // Next turn!\n    if (state.winner === 0) {\n      state.nextPlayer = state.nextPlayer === 1 ? 2 : 1;\n\n      if (state.nextPlayer === 2) this.move.apply(this, TTTComPlay(this));\n    }\n\n    return state;\n  }\n\n  cloneMove(x, y) {\n    if (!validMove(x, y) || this.winner !== 0 || this.board[x][y]) return this;\n\n    const board = this.board.map(column => column.slice());\n\n    board[x][y] = this.nextPlayer;\n\n    return new TicTacToe({ board, nextPlayer: this.nextPlayer === 1 ? 2 : 1 });\n  }\n}\n","import TicTacToe from './tictactoe';\n\nimport { MAKE_MOVE, RESET_GAME } from './actions';\n\nexport const game = new TicTacToe();\n\nexport const TTTInit = { board: [[0, 0, 0], [0, 0, 0], [0, 0, 0]], winner: 0 };\n\nconst transformGameState = ({ board, winner }) => ({ board, winner });\n\nexport function ticTacToeApp(state, { type, x, y }) {\n  switch (type) {\n    case MAKE_MOVE:\n      return transformGameState(game.move(x, y));\n\n    case RESET_GAME:\n      return transformGameState(game.reset());\n\n    default:\n      return state;\n  }\n}\n","import React, { useCallback, useReducer } from 'react';\n\nimport TicTacToe from './TicTacToe';\n\nimport { ticTacToeApp, TTTInit } from '../reducers';\nimport { resetGame } from '../actions';\n\nimport { TicTacToeStore } from '../contexts';\n\nimport styles from './App.module.css';\n\nconst App = () => {\n  const [state, dispatch] = useReducer(ticTacToeApp, TTTInit);\n\n  const resetClick = useCallback(() => dispatch(resetGame()));\n\n  let message = 'Game on! :)';\n\n  if (state.winner > 0) {\n    message = 'Player ' + state.winner + ' has won the game!';\n  } else if (state.winner === -1) {\n    message = 'The game has been drawn!';\n  }\n\n  return (\n    <>\n      <TicTacToeStore.Provider value={dispatch}>\n        <TicTacToe columns={state.board} />\n      </TicTacToeStore.Provider>\n      <div className={styles.message}>{message}</div>\n      <button className={styles.btn} onClick={resetClick}>\n        Reset Game\n      </button>\n      <div className={styles.github}>\n        <iframe\n          frameBorder=\"0\"\n          height=\"20px\"\n          scrolling=\"0\"\n          src=\"https://ghbtns.com/github-btn.html?user=awkaiser&repo=react-tictactoe&type=star\"\n          title=\"github-star\"\n          width=\"51px\"\n        />\n        <iframe\n          frameBorder=\"0\"\n          height=\"20px\"\n          scrolling=\"0\"\n          src=\"https://ghbtns.com/github-btn.html?user=awkaiser&type=follow\"\n          title=\"github-follow\"\n          width=\"123px\"\n        />\n      </div>\n    </>\n  );\n};\n\nApp.displayName = 'App';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('tictactoe'));\n\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"App_message__1PmXN\",\"btn\":\"App_btn__3TYRl\",\"github\":\"App_github__1jWCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Column_root__3xe4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicTacToe_root__31QVn\"};"],"sourceRoot":""}