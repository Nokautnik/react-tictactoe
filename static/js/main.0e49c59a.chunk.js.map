{"version":3,"sources":["serviceWorker.js","contexts.js","actions.js","components/TicTacToe/Space.jsx","components/TicTacToe/Column.jsx","components/TicTacToe/index.jsx","tttcomplay.js","tictactoe.js","reducers.js","components/App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","TicTacToeStore","React","createContext","MAKE_MOVE","RESET_GAME","Space","memo","_ref","value","x","y","dispatch","useContext","classNames","click","useCallback","type","makeMove","display","String","fromCharCode","push","react_default","a","createElement","className","join","onClick","prevProps","nextProps","displayName","Column","rows","map","TicTacToe_Space","key","concat","every","index","propTypes","PropTypes","array","isRequired","number","getColumnKey","reduce","acc","val","TicTacToe","columns","TicTacToe_Column","CORNERS","MAX_DEPTH","score","depth","arguments","length","undefined","winner","TTTComPlay","game","openSpaces","board","Math","floor","random","openingMove","minimax","Error","maxIndex","minIndex","possibleMoves","moves","scores","forEach","move","possible","cloneWithMove","apply","nextPlayer","indexOf","max","min","WINNING_COMBOS","isWinningCombo","b","c","combo","this","player","getWinner","combosRemaining","Object","classCallCheck","reset","_state","objectSpread","_this$state","clonedBoard","column","slice","spaces","ticTacToeAppInit","transformGameState","ticTacToeApp","_ref2","App","_useReducer","useReducer","_useReducer2","slicedToArray","resetClick","message","Fragment","Provider","components_TicTacToe","frameBorder","height","scrolling","src","title","width","ReactDOM","render","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0e49c59a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nexport const TicTacToeStore = React.createContext();\n","// Action types\n\nexport const MAKE_MOVE = 'MAKE_MOVE';\nexport const RESET_GAME = 'RESET_GAME';\n\n// Action creators\n\nexport function makeMove(x, y) {\n  return { type: MAKE_MOVE, x, y };\n}\n\nexport function resetGame() {\n  return { type: RESET_GAME };\n}\n","import React, { useCallback, useContext } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { TicTacToeStore } from '../../contexts';\nimport { makeMove } from '../../actions';\n\nconst Space = React.memo(\n  ({ value, x, y }) => {\n    const dispatch = useContext(TicTacToeStore);\n\n    const classNames = ['ttt-space'];\n\n    const click = useCallback(() => dispatch(makeMove(x, y)), [x, y]);\n\n    let display = String.fromCharCode(160); // &nbsp;\n\n    if (value === 1) {\n      display = 'X';\n    } else if (value === 2) {\n      display = 'O';\n    } else {\n      classNames.push('ttt-space-open');\n    }\n\n    return (\n      <div className={classNames.join(' ')} onClick={click}>\n        <div className=\"ttt-symbol\">{display}</div>\n      </div>\n    );\n  },\n  (prevProps, nextProps) => prevProps.value === nextProps.value\n);\n\nSpace.displayName = 'TicTacToeSpace';\n\nSpace.propTypes = {\n  value: PropTypes.number.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired\n};\n\nexport default Space;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Space from './Space';\n\nconst Column = React.memo(\n  ({ rows, x }) => (\n    <div className=\"ttt-column\">\n      {rows.map((value, y) => (\n        <Space key={`${x}_${y}`} value={value} x={x} y={y} />\n      ))}\n    </div>\n  ),\n  (prevProps, nextProps) =>\n    prevProps.rows.every((value, index) => nextProps.rows[index] === value) &&\n    prevProps.x === nextProps.x\n);\n\nColumn.displayName = 'TicTacToeColumn';\n\nColumn.propTypes = {\n  rows: PropTypes.array.isRequired,\n  x: PropTypes.number.isRequired\n};\n\nexport default Column;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Column from './Column';\n\nfunction getColumnKey(rows, index) {\n  return index + rows.reduce((acc, val) => acc + val, '');\n}\n\nconst TicTacToe = ({ columns }) => (\n  <div className=\"ttt-board\">\n    {columns.map((rows, index) => (\n      <Column key={getColumnKey(rows, index)} rows={rows} x={index} />\n    ))}\n  </div>\n);\n\nTicTacToe.propTypes = {\n  columns: PropTypes.array.isRequired\n};\n\nexport default TicTacToe;\n","/**\n * Undefeatable TicTacToe\n *\n * Computer player logic\n *\n * Approach:\n * - Use minimax algorithm\n */\n\nconst CORNERS = [[0, 0], [2, 0], [0, 2], [2, 2]];\nconst MAX_DEPTH = 9;\n\nfunction score(state, depth = 0) {\n  if (!state.winner) return 0;\n\n  return depth + (state.winner === 1 ? MAX_DEPTH : -MAX_DEPTH);\n}\n\nfunction minimax(game, depth = 0) {\n  if (depth >= MAX_DEPTH) throw new Error('Minimax reached impossible depth');\n\n  const state = game.state;\n\n  if (state.winner !== 0) return { score: score(state, depth) };\n\n  const possibleMoves = game.openSpaces;\n\n  const moves = [];\n  const scores = [];\n\n  let maxIndex;\n  let minIndex;\n\n  depth += 1;\n\n  possibleMoves.forEach(function checkPossibleMove(move) {\n    const futureGame = game.cloneWithMove.apply(game, move);\n    const possible = minimax(futureGame, depth);\n\n    moves.push(move);\n    scores.push(possible.score);\n  });\n\n  if (state.nextPlayer === 1) {\n    maxIndex = scores.indexOf(Math.max.apply(Math, scores));\n  } else {\n    minIndex = scores.indexOf(Math.min.apply(Math, scores));\n  }\n\n  return {\n    move: moves[maxIndex !== undefined ? maxIndex : minIndex],\n    score: scores[maxIndex !== undefined ? maxIndex : minIndex]\n  };\n}\n\nfunction openingMove(game) {\n  // Play center or random corner\n  return game.state.board[1][1] === 0\n    ? [1, 1]\n    : CORNERS[Math.floor(Math.random() * 4)];\n}\n\nexport default function TTTComPlay(game) {\n  // Reduce minimax search space with opening move\n  return game.openSpaces.length === 8 ? openingMove(game) : minimax(game).move;\n}\n","/**\n * Undefeatable TicTacToe\n *\n * Assumptions:\n * - Player 1 is human, player 2 is computer\n * - Player 1 always goes first\n * - Player 2 must always win or draw the game\n */\n\nimport TTTComPlay from './tttcomplay';\n\nconst WINNING_COMBOS = [\n  [[0, 0], [0, 1], [0, 2]], // Left side\n  [[0, 0], [1, 0], [2, 0]], // Top side\n  [[2, 0], [2, 1], [2, 2]], // Right side\n  [[0, 2], [1, 2], [2, 2]], // Bottom side\n  [[1, 0], [1, 1], [1, 2]], // Middle vertical\n  [[0, 1], [1, 1], [2, 1]], // Middle horizontal\n  [[0, 0], [1, 1], [2, 2]], // First diagonal\n  [[0, 2], [1, 1], [2, 0]] // Second diagonal\n];\n\nfunction isWinningCombo(a, b, c) {\n  const combo = [this[a[0]][a[1]], this[b[0]][b[1]], this[c[0]][c[1]]];\n  const player = combo[0];\n\n  return player && combo.every(value => value === player) ? player : 0;\n}\n\nfunction getWinner(game) {\n  const { board } = game.state;\n  const openSpaces = game.openSpaces;\n\n  if (openSpaces.length > 4) return 0; // Game cannot be won until the 5th move\n\n  let combosRemaining = WINNING_COMBOS.length;\n\n  let winner = 0;\n\n  do {\n    winner = isWinningCombo.apply(board, WINNING_COMBOS[combosRemaining - 1]);\n\n    combosRemaining--;\n  } while (!winner && combosRemaining > 0);\n\n  // -1 for draw, 0 for no win, 1 or 2 for winning player\n  return !winner && openSpaces.length === 0 ? -1 : winner;\n}\n\n// Class for public API of Tic Tac Toe game\nexport default class TicTacToe {\n  constructor(state) {\n    this.reset(state);\n  }\n\n  get openSpaces() {\n    const { board } = this.state;\n    const spaces = [];\n\n    for (let x = 0; x < 3; x++) {\n      for (let y = 0; y < 3; y++) {\n        if (!board[x][y]) spaces.push([x, y]); // Empty spaces will be `0` (falsey)\n      }\n    }\n\n    return spaces;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  reset(state) {\n    this._state = {\n      board: [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n      nextPlayer: 1,\n      winner: 0,\n      ...state\n    };\n\n    if (state) this._state.winner = getWinner(this);\n\n    return this.state;\n  }\n\n  move(x, y) {\n    const state = this.state;\n\n    // Return early on invalid move\n    if (\n      x === undefined ||\n      y === undefined ||\n      state.winner !== 0 ||\n      state.board[x][y]\n    ) {\n      return state;\n    }\n\n    // Set chosen space to \"next player\" ID\n    state.board[x][y] = state.nextPlayer;\n\n    // Winning move?\n    state.winner = getWinner(this);\n\n    // Next turn!\n    if (state.winner === 0) {\n      if (state.nextPlayer === 1) {\n        state.nextPlayer = 2;\n\n        return this.move.apply(this, TTTComPlay(this));\n      } else {\n        state.nextPlayer = 1;\n      }\n    }\n\n    return this.state;\n  }\n\n  cloneWithMove(x, y) {\n    const { board, nextPlayer } = this.state;\n\n    if (board[x][y]) return this;\n\n    // Moves as cloned state is useful for considering future moves + unit tests\n    const clonedBoard = board.map(column => column.slice());\n\n    clonedBoard[x][y] = nextPlayer;\n\n    return new TicTacToe({\n      board: clonedBoard,\n      nextPlayer: nextPlayer === 1 ? 2 : 1\n    });\n  }\n}\n","import TicTacToe from './tictactoe';\n\nimport { MAKE_MOVE, RESET_GAME } from './actions';\n\nexport const game = new TicTacToe();\n\nexport const ticTacToeAppInit = {\n  board: [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n  winner: 0\n};\n\nfunction transformGameState({ board, winner }) {\n  return { board, winner };\n}\n\nexport function ticTacToeApp(state, { type, x, y }) {\n  switch (type) {\n    case MAKE_MOVE: {\n      if (state.winner !== 0 || state.board[x][y]) return state;\n\n      return transformGameState(game.move(x, y));\n    }\n\n    case RESET_GAME: {\n      return transformGameState(game.reset());\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import React, { useCallback, useReducer } from 'react';\n\nimport TicTacToe from './TicTacToe';\n\nimport { ticTacToeApp, ticTacToeAppInit } from '../reducers';\nimport { resetGame } from '../actions';\n\nimport { TicTacToeStore } from '../contexts';\n\nconst App = () => {\n  const [state, dispatch] = useReducer(ticTacToeApp, ticTacToeAppInit);\n\n  const resetClick = useCallback(() => dispatch(resetGame()));\n\n  let message = 'Game on! :)';\n\n  if (state.winner > 0) {\n    message = 'Player ' + state.winner + ' has won the game!';\n  } else if (state.winner === -1) {\n    message = 'The game has been drawn!';\n  }\n\n  return (\n    <>\n      <TicTacToeStore.Provider value={dispatch}>\n        <TicTacToe columns={state.board} />\n      </TicTacToeStore.Provider>\n      <div className=\"ttt-message\">{message}</div>\n      <div className=\"ttt-controls\">\n        <button className=\"btn btn-primary\" onClick={resetClick}>\n          Reset Game\n        </button>\n      </div>\n      <div className=\"ttt-github\">\n        <iframe\n          frameBorder=\"0\"\n          height=\"20px\"\n          scrolling=\"0\"\n          src=\"https://ghbtns.com/github-btn.html?user=awkaiser&repo=react-tictactoe&type=star\"\n          title=\"github-star\"\n          width=\"51px\"\n        />\n        <iframe\n          frameBorder=\"0\"\n          height=\"20px\"\n          scrolling=\"0\"\n          src=\"https://ghbtns.com/github-btn.html?user=awkaiser&type=follow\"\n          title=\"github-follow\"\n          width=\"123px\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('tictactoe'));\n\nserviceWorker.register();\n"],"sourceRoot":""}